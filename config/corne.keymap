/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    del {
      bindings = <&kp DEL>;
      key-positions = <10 11>;
    };

    cmd {
      bindings = <&kp LCMD>;
      key-positions = <37 36>;
    };

    esc {
      bindings = <&kp ESC>;
      key-positions = <0 1>;
    };

    equal {
      bindings = <&kp EQUAL>;
      key-positions = <18 19>;
    };

    minus {
      bindings = <&kp MINUS>;
      key-positions = <30 31>;
    };

    capsLock {
      bindings = <&kp CAPS>;
      key-positions = <13 25>;
    };

    f3 {
      bindings = <&kp F3>;
      key-positions = <3 15>;
    };

    f4 {
      bindings = <&kp F4>;
      key-positions = <4 16>;
    };

    f5 {
      bindings = <&kp F5>;
      key-positions = <5 17>;
    };

    f10 {
      bindings = <&kp F10>;
      key-positions = <10 22>;
    };
  };

  macros {
    zed_em_kay: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LSHFT>,
        <&macro_tap>,
        <&kp Z &kp M &kp K>,
        <&macro_release>,
        <&kp LSHFT>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
  &kp TAB       &kp Q       &kp W        &kp E         &kp R     &kp T        &kp Y         &kp U        &kp I       &kp O          &kp P  &kp BACKSPACE
&kp LCTRL  &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHIFT F     &kp G        &kp H  &hm RSHIFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMI        &kp RET
&kp RSHFT       &kp Z       &kp X        &kp C         &kp V     &kp B        &kp N         &kp M    &kp COMMA     &kp DOT       &kp FSLH     &kp LSHIFT
                                      &kp LALT         &mo 1  &kp LGUI    &kp SPACE         &mo 2     &kp RALT
      >;
    };

    raise {
      bindings = <
&trans  &none  &none   &none   &none   &none     &none  &kp N7  &kp N8  &kp N9      &kp MINUS  &kp EQUAL
&trans  &none  &none   &none   &none   &none     &none  &kp N4  &kp N5  &kp N6       &kp LBKT   &kp RBKT
&trans  &none  &none   &none   &none   &none     &none  &kp N1  &kp N2  &kp N3  &kp BACKSLASH     &trans
                      &trans  &trans  &trans    &trans   &mo 3  &kp N0
      >;
    };

    lower {
      bindings = <
&trans  &kp F13  &kp F7   &kp F8  &kp F9   &none    &kp PG_UP    &kp HOME            &kp UP     &kp END         &none  &kp C_BRI_UP
&trans  &kp F12  &kp F4   &kp F5  &kp F6   &none    &kp PG_DN    &kp LEFT          &kp DOWN   &kp RIGHT  &kp C_VOL_UP  &kp C_BRI_DN
&trans  &kp F11  &kp F1   &kp F2  &kp F3   &none        &none  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_DN        &trans
                         &kp F10   &mo 3  &trans       &trans      &trans            &trans
      >;
    };

    both {
      bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &reset  &trans  &trans  &trans  &trans    &rgb_ug RGB_COLOR_HSB(0,60,50)
    &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(120,60,50)
    &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(240,60,50)
                                              &trans        &trans        &trans    &trans  &trans  &trans
      >;
    };
  };
};
